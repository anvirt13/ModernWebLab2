{"ast":null,"code":"var _jsxFileName = \"/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CrudApp() {\n  _s();\n  // Change the component name to CrudApp\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const fileName = file.name;\n    const newFile = {\n      name: fileName,\n      content: ''\n    };\n    setFiles([...files, newFile]);\n  };\n  const handleCreateFile = () => {\n    if (newFileName) {\n      const newFile = {\n        name: newFileName + '.txt',\n        content: ''\n      };\n      setFiles([...files, newFile]);\n      setNewFileName('');\n    }\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    setFileContent(file.content);\n    setIsEditing(false);\n  };\n  const handleFileEdit = () => {\n    setIsEditing(true);\n  };\n  const handleFileSave = () => {\n    const updatedFiles = files.map(file => {\n      if (file === selectedFile) {\n        return {\n          ...file,\n          content: editedText\n        };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n  const handleFileDelete = () => {\n    const updatedFiles = files.filter(file => file !== selectedFile);\n    setFiles(updatedFiles);\n    setSelectedFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD System for Text Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Selected File: \", selectedFile ? selectedFile.name : 'No File Selected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedText,\n          onChange: e => setEditedText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: fileContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New File:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter file name\",\n        value: newFileName,\n        onChange: e => setNewFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFile,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleFileSelect(file),\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(CrudApp, \"WCL/8dTN3ikWKAqc055Tcg1VRtU=\");\n_c = CrudApp;\nexport default CrudApp;\nvar _c;\n$RefreshReg$(_c, \"CrudApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CrudApp","_s","files","setFiles","selectedFile","setSelectedFile","fileContent","setFileContent","editedText","setEditedText","isEditing","setIsEditing","newFileName","setNewFileName","handleFileChange","event","file","target","fileName","name","newFile","content","handleCreateFile","handleFileSelect","handleFileEdit","handleFileSave","updatedFiles","map","handleFileDelete","filter","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","value","e","onClick","placeholder","index","_c","$RefreshReg$"],"sources":["/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CrudApp() { // Change the component name to CrudApp\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const fileName = file.name;\n\n    const newFile = {\n      name: fileName,\n      content: '',\n    };\n\n    setFiles([...files, newFile]);\n  };\n\n  const handleCreateFile = () => {\n    if (newFileName) {\n      const newFile = {\n        name: newFileName + '.txt',\n        content: '',\n      };\n      setFiles([...files, newFile]);\n      setNewFileName('');\n    }\n  };\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    setFileContent(file.content);\n    setIsEditing(false);\n  };\n\n  const handleFileEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleFileSave = () => {\n    const updatedFiles = files.map((file) => {\n      if (file === selectedFile) {\n        return { ...file, content: editedText };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n\n  const handleFileDelete = () => {\n    const updatedFiles = files.filter((file) => file !== selectedFile);\n    setFiles(updatedFiles);\n    setSelectedFile(null);\n  };\n\n  return (\n    <div>\n      <h1>CRUD System for Text Files</h1>\n      <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n\n      <div>\n        <h2>Selected File: {selectedFile ? selectedFile.name : 'No File Selected'}</h2>\n        {isEditing ? (\n          <div>\n            <textarea\n              value={editedText}\n              onChange={(e) => setEditedText(e.target.value)}\n            />\n            <button onClick={handleFileSave}>Save</button>\n          </div>\n        ) : (\n          <div>\n            <div>Content:</div>\n            <pre>{fileContent}</pre>\n            <button onClick={handleFileEdit}>Edit</button>\n            <button onClick={handleFileDelete}>Delete</button>\n          </div>\n        )}\n      </div>\n\n      <h2>Create New File:</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter file name\"\n          value={newFileName}\n          onChange={(e) => setNewFileName(e.target.value)}\n        />\n        <button onClick={handleCreateFile}>Create</button>\n      </div>\n\n      <h2>All Files:</h2>\n      <ul>\n        {files.map((file, index) => (\n          <li key={index} onClick={() => handleFileSelect(file)}>\n            {file.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CrudApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}