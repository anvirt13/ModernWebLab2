{"ast":null,"code":"var _jsxFileName = \"/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CrudApp() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [fileContent, setFileContent] = useState('');\n  const handleFileChange = event => {\n    const newFile = {\n      name: event.target.files[0].name,\n      content: ''\n    };\n    setFiles([...files, newFile]);\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    setEditedText(file.content);\n    setIsEditing(false);\n  };\n  const handleFileEdit = () => {\n    setIsEditing(true);\n  };\n  const handleFileSave = () => {\n    const updatedFiles = files.map(file => {\n      if (file === selectedFile) {\n        return {\n          ...file,\n          content: editedText\n        };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n  const handleFileDelete = () => {\n    const updatedFiles = files.filter(file => file !== selectedFile);\n    setFiles(updatedFiles);\n    setSelectedFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CRUD System \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Selected File: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedText,\n          onChange: e => setEditedText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: selectedFile.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No File Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleFileSelect(file),\n        children: file.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CrudApp, \"f6R83BS+3oeqkxcVglLijLQk1zI=\");\n_c = CrudApp;\nexport default CrudApp;\nvar _c;\n$RefreshReg$(_c, \"CrudApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CrudApp","_s","files","setFiles","selectedFile","setSelectedFile","editedText","setEditedText","isEditing","setIsEditing","fileContent","setFileContent","handleFileChange","event","newFile","name","target","content","handleFileSelect","file","handleFileEdit","handleFileSave","updatedFiles","map","handleFileDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","value","e","onClick","index","_c","$RefreshReg$"],"sources":["/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CrudApp() {\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [editedText, setEditedText] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n    const [fileContent, setFileContent] = useState('');\n\n\n  const handleFileChange = (event) => {\n    const newFile = {\n      name: event.target.files[0].name,\n      content: '',\n    };\n    setFiles([...files, newFile]);\n  };\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    setEditedText(file.content);\n    setIsEditing(false);\n  };\n\n  const handleFileEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleFileSave = () => {\n    const updatedFiles = files.map((file) => {\n      if (file === selectedFile) {\n        return { ...file, content: editedText };\n      }\n      return file;\n    });\n    setFiles(updatedFiles);\n    setIsEditing(false);\n  };\n\n  const handleFileDelete = () => {\n    const updatedFiles = files.filter((file) => file !== selectedFile);\n    setFiles(updatedFiles);\n    setSelectedFile(null);\n  };\n\n  return (\n    <div>\n      <h1> CRUD System </h1>\n      <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n\n      {selectedFile ? (\n        <div>\n          <h2>Selected File: {selectedFile.name}</h2>\n          {isEditing ? (\n            <div>\n              <textarea\n                value={editedText}\n                onChange={(e) => setEditedText(e.target.value)}\n              />\n              <button onClick={handleFileSave}>Save</button>\n            </div>\n          ) : (\n            <div>\n              <div>Content:</div>\n              <pre>{selectedFile.content}</pre>\n              <button onClick={handleFileEdit}>Edit</button>\n              <button onClick={handleFileDelete}>Delete</button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>\n          <h2>No File Selected</h2>\n        </div>\n      )}\n\n      <h2>All Files:</h2>\n      <ul>\n        {files.map((file, index) => (\n          <li key={index} onClick={() => handleFileSelect(file)}>\n            {file.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CrudApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}