{"ast":null,"code":"var _jsxFileName = \"/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BsTrash } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileOperations() {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleFileUploaded = newFile => {\n    setUploadedFiles([...uploadedFiles, newFile]);\n  };\n  const handleDeleteFile = fileName => {\n    // Remove the file from the uploadedFiles state\n    const updatedFiles = uploadedFiles.filter(file => file.name !== fileName);\n    setUploadedFiles(updatedFiles);\n  };\n  const uploadFile = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        // Replace with your API endpoint for file upload\n        const response = await axios.post('/api/upload', formData);\n        handleFileUploaded(response.data);\n        setFile(null);\n      } catch (error) {\n        console.error('File upload failed:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File CRUD System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteFile(file.name),\n          children: /*#__PURE__*/_jsxDEV(BsTrash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(FileOperations, \"wNAzlEsO201LXveP7RmJfW137nE=\");\n_c = FileOperations;\nexport default FileOperations;\nvar _c;\n$RefreshReg$(_c, \"FileOperations\");","map":{"version":3,"names":["React","useState","axios","BsTrash","jsxDEV","_jsxDEV","FileOperations","_s","uploadedFiles","setUploadedFiles","file","setFile","handleFileChange","event","target","files","handleFileUploaded","newFile","handleDeleteFile","fileName","updatedFiles","filter","name","uploadFile","formData","FormData","append","response","post","data","error","console","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/anvir/Documents/Semester 3/Modern Web/miniprojects/src/fileOperations.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { BsTrash } from 'react-icons/bs';\n\nfunction FileOperations() {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleFileUploaded = (newFile) => {\n    setUploadedFiles([...uploadedFiles, newFile]);\n  };\n\n  const handleDeleteFile = (fileName) => {\n    // Remove the file from the uploadedFiles state\n    const updatedFiles = uploadedFiles.filter((file) => file.name !== fileName);\n    setUploadedFiles(updatedFiles);\n  };\n\n  const uploadFile = async () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        // Replace with your API endpoint for file upload\n        const response = await axios.post('/api/upload', formData);\n        handleFileUploaded(response.data);\n        setFile(null);\n      } catch (error) {\n        console.error('File upload failed:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>File CRUD System</h1>\n      <input type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n      <button onClick={uploadFile}>Upload</button>\n      <ul>\n        {uploadedFiles.map((file, index) => (\n          <li key={index}>\n            {file.name}\n            <button onClick={() => handleDeleteFile(file.name)}>\n              <BsTrash />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default FileOperations;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}